---
# (c) 2023 Thales Group. All rights reserved.
# Author: Anurag Jain, Developer Advocate, Thales
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

## Verify that integration_config was specified
- block:
  - assert:
      that:
        - this_node_connection_string is defined

## Validate the CTE Process Set module
- block:
  - name: "Create CTE SignatureSet"
    thalesgroup.ciphertrust.cte_signature_set:
      op_type: create
      name: Test_CTE_SS_Ansible
      description: "Created via Ansible"
      source_list:
        - "/home/ansible"
        - "/home/dummy1"
        - "/home/dummy2"
        - "/home/dummy3"
      localNode: "{{ this_node_connection_string }}"
    register: _result_create_ss

  - assert:
      that:
        - _result_create_ss is not failed
        - _result_create_ss.response.id is string

- block:
  - name: "Create CTE ProcessSet"
    thalesgroup.ciphertrust.cte_process_set:
      op_type: create
      name: Test_CTE_PS_Ansible
      description: "Created via Ansible"
      processes:
        - signature: "{{ _result_create_ss.response.id }}"
          directory: "/home/ansible"
          file: "*"
      localNode: "{{ this_node_connection_string }}"
    register: _result_create

  - assert:
      that:
        - _result_create is not failed
        - _result_create.response.id is string

  - name: "Patch CTE ProcessSet"
    thalesgroup.ciphertrust.cte_process_set:
      op_type: patch
      id: "{{ _result_create.response.id }}"
      description: "Updated via Ansible"
      processes:
        - signature: "{{ _result_create_ss.response.id }}"
          directory: "/home/ansible"
          file: "*"
        - signature: "{{ _result_create_ss.response.id }}"
          directory: "/home/dummy1"
          file: "*"
      localNode: "{{ this_node_connection_string }}"
    register: _result_patch

  - assert:
      that:
        - _result_patch is not failed
        - _result_patch.response.message is match("Resource updated successfully")

  - name: "Add Processes to ProcessSet"
    thalesgroup.ciphertrust.cte_process_set:
      op_type: add_process
      id: "{{ _result_create.response.id }}"
      resources:
        - signature: "{{ _result_create_ss.response.id }}"
          directory: "/home/dummy2"
          file: "*"
      localNode: "{{ this_node_connection_string }}"
    register: _result_add_process

  - assert:
      that:
        - _result_add_process is not failed
        - _result_add_process.response.message is match("Resource updated successfully")

  - name: "Update Process in ProcessSet"
    thalesgroup.ciphertrust.cte_process_set:
      op_type: patch_process
      id: "{{ _result_create.response.id }}"
      processIndex: 2
      directory: "/home/dummy3"
      file: "*"
      signature: "{{ _result_create_ss.response.id }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_upd_process

  - assert:
      that:
        - _result_upd_process is not failed
        - _result_upd_process.response.message is match("Resource updated successfully")

  - name: "Remove Process from ProcessSet"
    thalesgroup.ciphertrust.cte_process_set:
      op_type: delete_process
      id: "{{ _result_create.response.id }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_del_process

  - assert:
      that:
        - _result_del_process is not failed
        - _result_del_process.response is match("Resource deleted successfully")