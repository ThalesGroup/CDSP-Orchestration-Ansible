---
# (c) 2023 Thales Group. All rights reserved.
# Author: Anurag Jain, Developer Advocate, Thales
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

## Verify that integration_config was specified
- block:
  - assert:
      that:
        - this_node_connection_string is defined

## Validate the CTE Client module
- block:
  - name: "Create CTE Client"
    thalesgroup.ciphertrust.cte_client:
      op_type: create
      name: "CTE-Client-Ansible"
      description: "Created via Ansible"
      communication_enabled: false
      client_type: FS
      localNode: "{{ this_node_connection_string }}"
    register: _result_create

  - assert:
      that:
        - _result_create is not failed
        - _result_create.response.id is string

  - name: "Patch Client"
    thalesgroup.ciphertrust.cte_client:
      op_type: patch
      id: "{{ _result_create['response']['id'] }}"
      registration_allowed: true
      description: "Updated via Ansible"
      enabled_capabilities: LDT
      localNode: "{{ this_node_connection_string }}"
    register: _result_patch

  - assert:
      that:
        - _result_patch is not failed
        - _result_patch.response.message is match("Resource updated successfully")

  - name: "Get CTE Policy ID from Name"
    thalesgroup.ciphertrust.cm_resource_get_id_from_name:
      localNode: "{{ this_node_connection_string }}"
      query_param: "name"
      query_param_value: Ansible-CTE-Policy
      resource_type: "cte-client"
    register: ctePolicy
  
  - name: "Add Guard Points to the CTE Client"
    thalesgroup.ciphertrust.cte_client:
      op_type: add_guard_point
      id: "{{ _result_create['response']['id'] }}"
      guard_paths:
        - "/opt/path1/"
      guard_point_params:
        guard_point_type: directory_auto
        policy_id: "{{ ctePolicy['response']['id'] }}"
        automount_enabled: true
      localNode: "{{ this_node_connection_string }}"
    register: _result_add_gp

  - assert:
      that:
        - _result_add_gp is not failed
        - _result_add_gp.response.message is match("Resource created successfully")
  
  - name: "Patch Guard Point in CTE Client"
    thalesgroup.ciphertrust.cte_client:
      op_type: patch_guard_point
      id: "{{ _result_create['response']['id'] }}"
      gp_id: "{{ _result_add_gp['response']['id'] }}"
      guard_enabled: true
    register: _result_update_gp

  - assert:
      that:
        - _result_update_gp is not failed
        - _result_update_gp.response.message is match("Resource updated successfully")
  
  - name: "Enable early access on GuardPoint"
    thalesgroup.ciphertrust.cte_client:
      op_type: gp_enable_early_access
      id: "{{ _result_create['response']['id'] }}"
      gp_id: "{{ _result_add_gp['response']['id'] }}"
      early_access: true
    register: _result_update_gp_enable_early_access

  - assert:
      that:
        - _result_update_gp_enable_early_access is not failed
        - _result_update_gp_enable_early_access.response.message is match("Resource updated successfully")
  
  - name: "UnGuard the guard point"
    thalesgroup.ciphertrust.cte_client:
      op_type: gp_unguard
      id: "{{ _result_create['response']['id'] }}"
      guard_point_id_list: 
        - "{{ _result_add_gp['response']['id'] }}"
    register: _result_unguard

  - assert:
      that:
        - _result_unguard is not failed
        - _result_unguard.response.message is match("Resource updated successfully")

  - name: "Send LDT Suspend Request to CTE Client"
    thalesgroup.ciphertrust.cte_client:
      op_type: ldt_pause
      id: "{{ _result_create['response']['id'] }}"
      localNode: "{{ this_node_connection_string }}"
      paused: true
    register: _result_ldt_pause

  - assert:
      that:
        - _result_ldt_pause is not failed
  
  - name: "Un-enroll CTE Client"
    thalesgroup.ciphertrust.cte_client:
      op_type: unenroll
      name: "CTE-Client-Ansible"
      localNode: "{{ this_node_connection_string }}"
    register: _result_unenroll

  - assert:
      that:
        - _result_unenroll is not failed
        - _result_unenroll.response.message is match("Resource created successfully")

  - name: "Delete a CTE Client with ID"
    thalesgroup.ciphertrust.cte_client:
      op_type: delete_id
      id: "{{ _result_create['response']['id'] }}"
      del_client: true
      force_del_client: true
      localNode: "{{ this_node_connection_string }}"
    register: _result_delete

  - assert:
      that:
        - _result_delete is not failed
        - _result_delete.response.message is match("Resource updated successfully")