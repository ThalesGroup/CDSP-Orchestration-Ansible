---
# (c) 2023 Thales Group. All rights reserved.
# Author: Anurag Jain, Developer Advocate, Thales
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

## Verify that integration_config was specified
- block:
  - assert:
      that:
        - this_node_connection_string is defined

## Validate the CTE Resource Set module
- block:
  - name: "Create CTE UserSet"
    thalesgroup.ciphertrust.cte_user_set:
      op_type: create
      name: Test_CTE_RS_Ansible
      users:
        - uname: ansibleu0
          uid: 1000
          gname: rootGroup
          gid: 1000
      localNode: "{{ this_node_connection_string }}"
    register: _result_create

  - assert:
      that:
        - _result_create is not failed
        - _result_create.response.id is string

  - name: "Patch CTE UserSet"
    thalesgroup.ciphertrust.cte_user_set:
      op_type: patch
      id: "{{ _result_create.response.id }}"
      users:
        - uname: ansibleu0
          uid: 1000
          gname: rootGroup
          gid: 1000
        - uname: ansibleu1
          uid: 1001
          gname: rootGroup
          gid: 1000
      localNode: "{{ this_node_connection_string }}"
    register: _result_patch

  - assert:
      that:
        - _result_patch is not failed
        - _result_patch.response.message is match("Resource updated successfully")

  - name: "Add Users to UserSet"
    thalesgroup.ciphertrust.cte_user_set:
      op_type: add_user
      id: "{{ _result_create.response.id }}"
      users:
        - uname: ansibleu2
          uid: 1002
          gname: rootGroup
          gid: 1000
      localNode: "{{ this_node_connection_string }}"
    register: _result_add_user

  - assert:
      that:
        - _result_add_user is not failed
        - _result_add_user.response.message is match("Resource updated successfully")

  - name: "Update user in UserSet"
    thalesgroup.ciphertrust.cte_user_set:
      op_type: patch_user
      id: "{{ _result_create.response.id }}"
      userIndex: 1
      uname: ansibleu3
      uid: 1003
      gname: rootGroup
      gid: 1000
      localNode: "{{ this_node_connection_string }}"
    register: _result_upd_user

  - assert:
      that:
        - _result_upd_user is not failed
        - _result_upd_user.response.message is match("Resource created successfully")

  - name: "Remove User from UserSet"
    thalesgroup.ciphertrust.cte_user_set:
      op_type: delete_user
      id: "{{ _result_create.response.id }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_del_user

  - assert:
      that:
        - _result_del_user is not failed
        - _result_del_user.response is match("Resource deleted successfully")