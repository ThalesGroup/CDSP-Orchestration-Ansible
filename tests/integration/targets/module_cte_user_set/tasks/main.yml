---
# (c) 2023 Thales Group. All rights reserved.
# Author: Anurag Jain, Developer Advocate, Thales

####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

## Verify that integration_config was specified
- block:
  - assert:
      that:
        - this_node_connection_string is defined
        - user_set_name is defined
        - initial_users_list is defined

## Validate the CTE User Set module
- block:
  - name: "Create CTE UserSet"
    thalesgroup.ciphertrust.cte_user_set:
      op_type: create
      name: "{{ user_set_name }}"
      description: "{{ description }}"
      users: "{{ initial_users_list }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_create

  - assert:
      that:
        - _result_create is not failed
        - _result_create.response.id is string

  - name: "Update CTE UserSet"
    thalesgroup.ciphertrust.cte_user_set:
      op_type: patch
      id: "{{ _result_create.response.id }}"
      users: "{{ updated_users_list }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_patch

  - assert:
      that:
        - _result_patch is not failed
        - _result_patch.response.message is match("Resource updated successfully")

  - name: "Add Users to UserSet"
    thalesgroup.ciphertrust.cte_user_set:
      op_type: add_user
      id: "{{ _result_create.response.id }}"
      users: "{{ add_user_to_set }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_add_user

  - assert:
      that:
        - _result_add_user is not failed
        - _result_add_user.response.message is match("Resource updated successfully")

  - name: "Update user in UserSet"
    thalesgroup.ciphertrust.cte_user_set:
      op_type: patch_user
      id: "{{ _result_create.response.id }}"
      userIndex: "{{ user_index_to_be_updated }}"
      uname: "{{ username_to_be_updated }}"
      uid: "{{ uid_to_be_updated }}"
      gname: rootGroup
      gid: 1000
      localNode: "{{ this_node_connection_string }}"
    register: _result_upd_user

  - assert:
      that:
        - _result_upd_user is not failed

  - name: "Remove User from UserSet"
    thalesgroup.ciphertrust.cte_user_set:
      op_type: delete_user
      id: "{{ _result_create.response.id }}"
      localNode: "{{ this_node_connection_string }}"
      userIndex: "{{ user_index_to_be_deleted }}"
    register: _result_del_user

  - assert:
      that:
        - _result_del_user is not failed
  
  - name: "Delete User Set"
    thalesgroup.ciphertrust.cm_resource_delete:
      key: "{{ _result_create.response.id }}"
      resource_type: "userset"
      localNode: "{{ this_node_connection_string }}"
    register: _result_delete_user_set
    
  - assert:
      that:
        - _result_delete_user_set is not failed