---
# (c) 2023 Thales Group. All rights reserved.
# Author: Anurag Jain, Developer Advocate, Thales

####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

## Verify that integration_config was specified
- block:
  - assert:
      that:
        - this_node_connection_string is defined

## Validate the CSI storage group module
- block:
  - name: "Create CSI Storage Group"
    thalesgroup.ciphertrust.cte_csi_storage_group:
      op_type: create
      name: "{{ storage_group_name }}"
      k8s_namespace: "{{ namespace }}"
      k8s_storage_class: "{{ storage_class }}"
      client_profile: "{{ client_profile }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_create

  - assert:
      that:
        - _result_create is not failed
        - _result_create.response.id is string

  - name: "Patch CSI Storage Group"
    thalesgroup.ciphertrust.cte_csi_storage_group:
      op_type: patch
      id: "{{ _result_create['response']['id'] }}"
      description: "Updated via Ansible"
      localNode: "{{ this_node_connection_string }}"
    register: _result_patch

  - assert:
      that:
        - _result_patch is not failed
        - _result_patch.response.message is match("Resource updated successfully")

  - name: "Add Clients to the Storage Group"
    thalesgroup.ciphertrust.cte_csi_storage_group:
      op_type: add_client
      id: "{{ _result_create['response']['id'] }}"
      client_list:
      localNode: "{{ this_node_connection_string }}"
    register: _result_add_clients

  - assert:
      that:
        - _result_add_clients is not failed
        - _result_add_clients.response.message is match("Resource created successfully")

  - name: "Add Client to Group"
    thalesgroup.ciphertrust.group_add_remove_object:
      op_type: add
      object_type: client
      object_id: "{{ client_id }}"
      name: "{{ new_group_name }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_add_client

  - assert:
      that:
        - _result_add_client is not failed
        - _result_add_client.response.message is match("Resource created successfully")

  - name: "Remove User from Group"
    thalesgroup.ciphertrust.group_add_remove_object:
      op_type: remove
      object_type: user
      object_id: "{{ user_id }}"
      name: "{{ new_group_name }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_add_user

  - assert:
      that:
        - _result_add_user is not failed

  - name: "Remove Client from Group"
    thalesgroup.ciphertrust.group_add_remove_object:
      op_type: remove
      object_type: client
      object_id: "{{ client_id }}"
      name: "{{ new_group_name }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_add_client

  - assert:
      that:
        - _result_add_client is not failed
        
- name: "Delete Resource Set 3"
  thalesgroup.ciphertrust.cm_resource_delete:
    key: "{{ _result_create_rs_3.response.id }}"
    resource_type: "resourceset"
    localNode: "{{ this_node_connection_string }}"
  register: _result_delete_resource_set_3
  
- assert:
    that:
      - _result_delete_resource_set_3 is not failed