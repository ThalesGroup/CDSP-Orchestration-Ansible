---
# tasks file for crdp
- name: "Create Key"
  thalesgroup.ciphertrust.vault_keys2_save:
    op_type: create
    name: crdp
    algorithm: aes
    size: 256
    undeletable: false
    unexportable: false
    usageMask: 3145740
    meta:
      ownerId: admin
      versionedKey: true
    xts: false
    localNode:
      server_ip: "{{ cm_ip }}"
      server_private_ip: "{{ cm_private_ip }}"
      server_port: 5432
      user: "{{ cm_username }}"
      password: "{{ cm_password }}"
      verify: False
      auth_domain_path:
    register: key

- name: "User Set for masked info"
  thalesgroup.ciphertrust.dpg_user_set_save:
    localNode:
      server_ip: "{{ cm_ip }}"
      server_private_ip: "{{ cm_private_ip }}"
      server_port: 5432
      user: "{{ cm_username }}"
      password: "{{ cm_password }}"
      verify: False
      auth_domain_path:
    op_type: "create"
    name: masked
    users:
      - masked
  register: user_set_masked

- name: "User Set for plaintext"
  thalesgroup.ciphertrust.dpg_user_set_save:
    localNode:
      server_ip: "{{ cm_ip }}"
      server_private_ip: "{{ cm_private_ip }}"
      server_port: 5432
      user: "{{ cm_username }}"
      password: "{{ cm_password }}"
      verify: False
      auth_domain_path:
    op_type: "create"
    name: plain
    users:
      - plain
  register: user_set_plain

- name: "Get dynamic masket format ID"
  thalesgroup.ciphertrust.cm_resource_get_id_from_name:
    localNode:
      server_ip: "{{ cm_ip }}"
      server_private_ip: "{{ cm_private_ip }}"
      server_port: 5432
      user: "{{ cm_username }}"
      password: "{{ cm_password }}"
      verify: False
      auth_domain_path:
    query_param: "name"
    query_param_value: "SHOW_LAST_FOUR"
    resource_type: "masking-formats"
  register: masking_format_dynamic

- name: "Create Access Policy"
  thalesgroup.ciphertrust.dpg_access_policy_save:
    localNode:
      server_ip: "{{ cm_ip }}"
      server_private_ip: "{{ cm_private_ip }}"
      server_port: 5432
      user: "{{ cm_username }}"
      password: "{{ cm_password }}"
      verify: False
      auth_domain_path:
    op_type: "create"
    name: crdp_access_policy
    default_reveal_type: "Ciphertext"
    user_set_policy:
      - reveal_type: Plaintext
        user_set_id: "{{ user_set_plain['response']['id'] }}"
      - reveal_type: "Masked Value"
        user_set_id: "{{ user_set_masked['response']['id'] }}"
        masking_format_id: "{{ masking_format_dynamic['response']['id'] }}"
  register: access_policy

- name: "Get static masket format ID"
  thalesgroup.ciphertrust.cm_resource_get_id_from_name:
    localNode:
      server_ip: "{{ cm_ip }}"
      server_private_ip: "{{ cm_private_ip }}"
      server_port: 5432
      user: "{{ cm_username }}"
      password: "{{ cm_password }}"
      verify: False
      auth_domain_path:
    query_param: "name"
    query_param_value: "LAST_FOUR"
    resource_type: "masking-formats"
  register: masking_format_static

- name: "Create Character Set"
  thalesgroup.ciphertrust.dpg_character_set_save:
    localNode:
      server_ip: "{{ cm_ip }}"
      server_private_ip: "{{ cm_private_ip }}"
      server_port: 5432
      user: "{{ cm_username }}"
      password: "{{ cm_password }}"
      verify: False
      auth_domain_path:
    op_type: create
    name: crdp
    range:
      - 0030-0039
      - 0041-005A
      - 0061-007A
    encoding: UTF-8
  register: charset

- name: "Create Protection Policy"
  thalesgroup.ciphertrust.dpg_protection_policy_save:
    localNode:
      server_ip: "{{ cm_ip }}"
      server_private_ip: "{{ cm_private_ip }}"
      server_port: 5432
      user: "{{ cm_username }}"
      password: "{{ cm_password }}"
      verify: False
      auth_domain_path:
    op_type: create
    access_policy_name: crdp_access_policy
    masking_format_id: "{{ masking_format_static['response']['id'] }}"
    name: crdp_protection_policy
    key: crdp
    #tweak: "1628462495815733"
    #tweak_algorithm: "SHA1"
    algorithm: "AES/CBC/PKCS5Padding"
    character_set_id: "{{ charset['response']['id'] }}"
  register: protection_policy

- name: "Create DPG Client Profile"
  thalesgroup.ciphertrust.dpg_client_profile_save:
    name: demo
    op_type: create
    app_connector_type: CRDP
    lifetime: 30d
    cert_duration: 730
    max_clients: 200
    #ca_id: "{{ ca_id }}"
    #nae_iface_port: 9006
    csr_parameters:
      csr_cn: admin
    #policy_id: "{{ policy['response']['id'] }}"
    #configurations:
    #  auth_method_used:
    #    scheme_name: Basic
    #  tls_to_appserver:
    #    tls_skip_verify: true
    #    tls_enabled: false
    localNode:
      server_ip: "{{ cm_ip }}"
      server_private_ip: "{{ cm_private_ip }}"
      server_port: 5432
      user: "{{ cm_username }}"
      password: "{{ cm_password }}"
      verify: False
      auth_domain_path:
  register: profile