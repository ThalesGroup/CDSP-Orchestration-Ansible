#
# (c) 2023 Thales Group. All rights reserved.
# Author: Anurag Jain, Developer Advocate, Thales
#
---
  - name: "Sample playbook to remove sample DPG configuration"
    hosts: localhost
    connection: local

    vars_files:
      - vars/dpg.yml

    tasks:
    # Get and delete DPG Client Profile
    - name: "Get Client Profile ID from Name"
      thalesgroup.ciphertrust.cm_resource_get_id_from_name:
        localNode: "{{ this_node_connection_string }}"
        query_param: "name"
        query_param_value: AnsibleClientProfile
        resource_type: "client-profiles"
      register: clientProfile
      ignore_errors: true

    - name: "Delete Client Profile"
      thalesgroup.ciphertrust.cm_resource_delete:
        localNode: "{{ this_node_connection_string }}"
        key: "{{ clientProfile['response']['id'] }}"
        resource_type: "client-profiles"
      ignore_errors: true

    # Get and delete DPG Policy
    - name: "Get DPG Policy from Name"
      thalesgroup.ciphertrust.cm_resource_get_id_from_name:
        localNode: "{{ this_node_connection_string }}"
        query_param: "name"
        query_param_value: "{{ dpg_policy_name }}"
        resource_type: "dpg-policies"
      register: dpgPolicy
      ignore_errors: true

    - name: "Delete DPG Policy"
      thalesgroup.ciphertrust.cm_resource_delete:
        localNode: "{{ this_node_connection_string }}"
        key: "{{ dpgPolicy['response']['id'] }}"
        resource_type: "dpg-policies"
      ignore_errors: true

    # Get and delete Access Policy
    - name: "Get Access Policy from Name"
      thalesgroup.ciphertrust.cm_resource_get_id_from_name:
        localNode: "{{ this_node_connection_string }}"
        query_param: "name"
        query_param_value: "{{ access_policy_name }}"
        resource_type: "access-policies"
      register: accessPolicy
      ignore_errors: true

    - name: "Delete Access Policy"
      thalesgroup.ciphertrust.cm_resource_delete:
        localNode: "{{ this_node_connection_string }}"
        key: "{{ accessPolicy['response']['id'] }}"
        resource_type: "access-policies"
      ignore_errors: true

    # Get and delete User Set
    - name: "Get UserSet from Name"
      thalesgroup.ciphertrust.cm_resource_get_id_from_name:
        localNode: "{{ this_node_connection_string }}"
        query_param: "name"
        query_param_value: "{{ var_user_set_name }}"
        resource_type: "user-sets"
      register: userset
      ignore_errors: true

    - name: "Delete UserSet"
      thalesgroup.ciphertrust.cm_resource_delete:
        localNode: "{{ this_node_connection_string }}"
        key: "{{ userset['response']['id'] }}"
        resource_type: "user-sets"
      ignore_errors: true

    # Delete Protection Policies
    - name: "Delete Protection Policy"
      thalesgroup.ciphertrust.cm_resource_delete:
        localNode: "{{ this_node_connection_string }}"
        key: "{{ fpe_card_protection_policy_name }}"
        resource_type: "protection-policies"
      ignore_errors: true

    - name: "Delete Protection Policy"
      thalesgroup.ciphertrust.cm_resource_delete:
        localNode: "{{ this_node_connection_string }}"
        key: "{{ non_card_protection_policy_name }}"
        resource_type: "protection-policies"
      ignore_errors: true

    # Get and delete character Set
    - name: "Get Character Set from Name"
      thalesgroup.ciphertrust.cm_resource_get_id_from_name:
        localNode: "{{ this_node_connection_string }}"
        query_param: "name"
        query_param_value: "{{ char_set_name }}"
        resource_type: "character-sets"
      register: charset
      ignore_errors: true

    - name: "Delete Character Set"
      thalesgroup.ciphertrust.cm_resource_delete:
        localNode: "{{ this_node_connection_string }}"
        key: "{{ charset['response']['id'] }}"
        resource_type: "character-sets"
      ignore_errors: true

    # Delete NAE Interface
    - name: "Delete Interface"
      thalesgroup.ciphertrust.cm_resource_delete:
        localNode: "{{ this_node_connection_string }}"
        key: "nae_all_9006"
        resource_type: "interfaces"
      ignore_errors: true

    # Get and delete key
    - name: "Get Key ID from its name"
      thalesgroup.ciphertrust.cm_resource_get_id_from_name:
        localNode: "{{ this_node_connection_string }}"
        query_param: "name"
        query_param_value: "{{ dpg_key_name }}"
        resource_type: "keys"
      register: key
      ignore_errors: true

    - name: "Delete Key"
      thalesgroup.ciphertrust.cm_resource_delete:
        localNode: "{{ this_node_connection_string }}"
        key: "{{ key['response']['id'] }}"
        resource_type: "keys"
      ignore_errors: true